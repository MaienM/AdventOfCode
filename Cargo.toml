[workspace]
resolver = "2"
members = [
	"aoc",
	"puzzle_runner",
	"puzzle_runner_derive",
	"puzzle_wasm",
]

[workspace.lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(coverage,coverage_nightly)'] }

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -1 }
match_on_vec_items = "allow"
missing_panics_doc = "allow"
must_use_candidate = "allow"

# There's a lot of casting between different numeric types in this project. In most cases the possible ranges of these are pretty well understood, and as such most of these concerns are unfounded and just add clutter.
cast_possible_truncation = "allow"
cast_possible_wrap = "allow"
cast_precision_loss = "allow"
cast_sign_loss = "allow"

# While this might be more _memory_ efficient it's often not more computationally efficient, and I care far more about
# that in this project than I do about a bit more memory usage (especially since the memory usage of most solutions is
# relatively minimal anyway).
trivially_copy_pass_by_ref = "allow"
